# version: "3.7"

# services:
#   web:
#     build: .
#     container_name: nodegoat_web
#     environment:
#       NODE_ENV: development
#       MONGODB_URI: mongodb://mongo:27017/nodegoat
#     command: >
#       sh -c "until nc -z -w 2 mongo 27017 && echo 'mongo is ready for connections' &&
#              node artifacts/db-reset.js &&
#              npm start; do sleep 2; done"
#     ports:
#       - "4000:4000"
#     depends_on:
#       - mongo
#     networks:
#       - nodegoat_net

#   mongo:
#     image: mongo:4.4
#     container_name: nodegoat_mongo
#     user: mongodb
#     expose:
#       - 27017
#     networks:
#       - nodegoat_net

#   attacker:
#     image: alpine:latest
#     container_name: attacker
#     network_mode: host
#     command: sh -c "apk update && apk add --no-cache curl tcpdump && sleep infinity"
#     tty: true
#     stdin_open: true

#   curl-client:
#     image: alpine:latest
#     container_name: curl_client
#     command: sh -c "apk update && apk add --no-cache curl && sleep infinity"
#     tty: true
#     stdin_open: true
#     networks:
#       - nodegoat_net

# networks:
#   nodegoat_net:
#     driver: bridge

version: "3.7"

services:
  web:
    build: .
    environment:
      NODE_ENV:
      MONGODB_URI: mongodb://mongo:27017/nodegoat
    command: sh -c "until nc -z -w 2 mongo 27017 && echo 'mongo is ready for connections' && node artifacts/db-reset.js && npm start; do sleep 2; done"
    ports:
      - "4000:4000"

  mongo:
    image: mongo:4.4
    user: mongodb
    expose:
      - 27017